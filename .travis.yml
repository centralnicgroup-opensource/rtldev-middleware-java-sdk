# run a node.js script to use code from semantic-release
after_success:
  - semantic-release --prepare @conveyal/maven-semantic-release --publish @semantic-release/github,@conveyal/maven-semantic-release --verify-conditions @semantic-release/github --verify-release @conveyal/maven-semantic-release --use-conveyal-workflow --dev-branch=dev
before_install:
# only install signing keys under the same circumstances we do a mvn deploy later
  if [ "$TRAVIS_BRANCH" = 'master' ] && [ "$TRAVIS_PULL_REQUEST" == 'false' ]; then
    openssl aes-256-cbc -K $encrypted_c9f9aedf26b7_key -iv $encrypted_c9f9aedf26b7_iv -in codesigning.asc.enc -out codesigning.asc -d
    gpg --import --batch codesigning.asc
  fi
# install dependencies used in after_success here because they don't get cached if called in after_success
before_script:
  - yarn global add @conveyal/maven-semantic-release semantic-release
cache:
  directories:
    - $HOME/.m2
    - $HOME/.cache/yarn
    - $HOME/.cache/pip
    - $HOME/.yarn-cache
install: true
jdk:
  - oraclejdk8
language: java
notifications:
  email: false
script:
  - mvn package
sudo: false